import work.lclpnet.build.task.GithubDeploymentTask

plugins {
    id 'java'
    id 'fabric-loom' version '1.5-SNAPSHOT'
    id 'maven-publish'
    id 'gradle-build-utils' version '1.7.0'
    id 'kibu-plugin-dev' version '0.13.0'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

Properties props = buildUtils.loadProperties('publish.properties')

group = project.maven_group
version = buildUtils.gitVersion()

base {
    archivesName = project.archives_base_name
}

repositories {
    mavenCentral()

    maven {
        url "https://repo.lclpnet.work/repository/internal"
    }

    maven {
        url = 'https://maven.nucleoid.xyz/'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "work.lclpnet.mods.kibu:kibu:${project.kibu_version}"
    modImplementation "work.lclpnet.mods.kibu:kibu-plugins:${project.kibu_plugins_version}"
    modImplementation "xyz.nucleoid:fantasy:${project.fantasy_version}"

    /* other Java dependencies */
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation 'org.json:json:20230227'

    implementation 'com.google.dagger:dagger:2.46.1'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.46.1'

    // bundle these dependencies
    'work.lclpnet:json-config4j:1.0.0'.with {
        implementation it
        bundle it
    }

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation 'com.github.romankh3:image-comparison:4.4.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}

processResources {
    inputs.property "version", project.version

    filesMatching("plugin.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release.set(17)
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

[jar, sourcesJar, shadowJar].each {
    it.from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

shadowJar {
    mergeServiceFiles()
}

def env = System.getenv()

tasks.register("github", GithubDeploymentTask) {
    dependsOn tasks.remapShadowJar

    config {
        token = env.get("GITHUB_TOKEN")
        repository = env.get("GITHUB_REPOSITORY")
    }

    release {
        title = "[$project.minecraft_version] $project.name $project.version"
        tag = buildUtils.latestTag()
    }

    assets.add(tasks.remapShadowJar.archiveFile.get())
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = project.archives_base_name

            from components.kibu

            pom {
                name = 'Pal'
                description = 'A kibu plugin for Fabric that adds essential functionally for minigame servers'
            }
        }
    }

    buildUtils.setupPublishRepository(repositories, props)
}